# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: ðŸ¤– Publish Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: â™¿ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: ðŸ”¨ Build package
      run: python -m build
    - name: ðŸ‘· Ensure package is installable
      run: |
        pip install -U virtualenv
        mkdir -p some_dir
        cd some_dir
        virtualenv venv
        venv/bin/pip install ../dist/ri_sdk-*.whl
        venv/bin/python -c "import ri_sdk; print(ri_sdk.__version__)"
    - name: ðŸš€ Publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*
