"""
Autogenerated!
Do not edit manually.
"""

import ctypes
from typing import NoReturn


class RoboIntellectBaseSDK:
    def __init__(
        self,
        lib: ctypes.CDLL,
        setup_methods_args: bool = False,
    ) -> None:
        """
        :param lib: RI SDK library .dll / .so
        :param setup_methods_args: whether to configure methods args on init
        """
        self.lib = lib
        if setup_methods_args:
            self.setup_all_methods_args_types()

    @classmethod
    def raise_on_error(cls, error_text_c: ctypes.Array[ctypes.c_char]) -> NoReturn:
        """
        # todo: more details?

        :param error_text_c:
        :return:
        """
        raise ValueError(error_text_c.raw.decode())

    @classmethod
    def process_result(
        cls,
        error_code: int,
        error_text_c: ctypes.Array[ctypes.c_char],
    ) -> None:
        """
        :param error_code:
        :param error_text_c:
        :return:
        """
        if error_code:
            cls.raise_on_error(error_text_c)

    def setup_all_methods_args_types(self) -> None:
        """
        Установка типов аргументов всех методов.
        :return:
        """
        for name in dir(self):
            if not name.startswith("setup_arg_types_"):
                continue
            method = getattr(self, name)
            method()
