[tool.poetry]
name = "parse-ri-sdk-docs"
version = "0.1.0"
description = ""
authors = ["Suren Khorenyan <surenkhorenyan@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
beautifulsoup4 = "^4.12.3"
requests = "^2.31.0"
mako = "^1.3.2"
pydantic = "^2.6.3"
pyyaml = "^6.0.1"

[tool.poetry.group.dev.dependencies]
black = "^24.2.0"
ruff = "^0.2.2"
pre-commit = "^3.6.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
target-version = ["py39"]

[tool.ruff]
line-length = 79
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
#    "D",
    "D201",
    "D202",
    "A",
    "C4",
    "COM",
    "DTZ",
    "T10",
    "EM",
    "ISC",
    "ICN",
    "G",
    "T20",
    "PT",
    "SIM",
    "TID",
    "ARG",
    "PTH",
    "ERA",
    "PL",
    "PLE",
    "PLR",
    "PLW",
    "RUF",
    "ASYNC",
    "UP",
    "ANN",
]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "docs/*",
    "examples/api_for_tortoise_orm/*",
]

# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

extend-ignore = [
#    "D401",
#    "D403",
#    "D400",
#    "D415",
#    "D100",  # Missing docstring in public module
#    "D101",  # Missing docstring in public class
#    "D102",  # Missing docstring in public method
#    "D103",  # Missing docstring in public function
#    "D104",  # Missing docstring in public package
#    "D105",  # Missing docstring in magic method
#    "D106",  # Missing docstring in public nested class
#    "D107",  # Missing docstring in `__init__`
#    "D200",  # One-line docstring should fit on one line
#    "D203",  # 1 blank line required before class docstring
#    "D210",  # No whitespaces allowed surrounding docstring text
#    "D212",  # Multi-line docstring summary should start at the first line
#    "D301",  # Use r""" if any backslashes in a docstring
#    "D404",  #  First word of the docstring should not be "This"
    "PLR0913",  # Too many arguments to function call
    "ANN101",  #  Missing type annotation for `self` in method
    "ANN102",  #  Missing type annotation for `cls` in classmethod
#    "A003",  # Class attribute `type` is shadowing a Python builtin
#    "ARG001",  # Unused function argument: `{name}`
#    "ARG002",  # Unused method argument: `{name}`
#    "ARG003",  # Unused class method argument: `{name}`
#    "RUF001",  # String contains ambiguous unicode character {confusable} (did you mean {representant}?)
#    "RUF002",  # Docstring contains ambiguous unicode character {confusable} (did you mean {representant}?)
#    "RUF003",  # Comment contains ambiguous unicode character {confusable} (did you mean {representant}?)
#    "PT006",  # pytest parametrize tuple args

    # warning: The following rules may cause conflicts when used with the formatter:
    #    `COM812`, `ISC001`. To avoid unexpected behavior,
    #    we recommend disabling these rules,
    #    either by removing them from the `select`
    #    or `extend-select` configuration,
    #    or adding them to the `ignore` configuration.
    #    16 files already formatted
    # "ISC001",
    # "COM812",
]

[tool.ruff.lint.per-file-ignores]
"src/robointellect_base_sdk.py" = [
    "E501",
    "ERA001",
    "RUF002",
]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
